# react-native-kit-version: 1

require 'json'

def expo_enabled
  pkg = File.expand_path('../package.json', __dir__)
  !!(File.exist?(pkg) && JSON.parse(File.read(pkg)).dig('dependencies', 'expo'))
rescue
  false
end

if expo_enabled == true
  require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
end

# React Native pods
require Pod::Executable.execute_command('node', ['-p',
  'require.resolve(
    "react-native/scripts/react_native_pods.rb",
    {paths: [process.argv[1]]},
  )', __dir__]).strip

platform :ios, '15.1'
prepare_react_native_project!

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

target 'ReactNativeKit' do
  if expo_enabled == true
    use_expo_modules!
  end

  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false,
      :ccache_enabled => true
    )

    PLIST_BUDDY_PATH = '/usr/libexec/PlistBuddy'

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Preserve anything already in OTHER_SWIFT_FLAGS and just append the skip-flag once
        existing = config.build_settings['OTHER_SWIFT_FLAGS'] || '$(inherited)'
        unless existing.include?('-no-verify-emitted-module-interface')
          config.build_settings['OTHER_SWIFT_FLAGS'] = "#{existing} -no-verify-emitted-module-interface"
        end
      end
    end
  end
end
